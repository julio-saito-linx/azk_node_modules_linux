{
  "name": "child-process-promise",
  "description": "Simple wrapper around the \"child_process\" module that makes use of promises",
  "main": "lib/index.js",
  "files": [
    "lib",
    "Readme.md"
  ],
  "scripts": {
    "lint": "eslint lib/*js test/*js",
    "pretest": "npm run lint",
    "test": "node test/test.js"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/patrick-steele-idem/child-process-promise.git"
  },
  "keywords": [
    "child",
    "process",
    "promises"
  ],
  "author": {
    "name": "Patrick Steele-Idem",
    "email": "pnidem@gmail.com"
  },
  "license": "BSD",
  "bugs": {
    "url": "https://github.com/patrick-steele-idem/child-process-promise/issues"
  },
  "publishConfig": {
    "registry": "http://registry.npmjs.org/"
  },
  "dependencies": {
    "q": "^1.1.2"
  },
  "devDependencies": {
    "eslint": "^0.10.2"
  },
  "version": "1.0.1",
  "readme": "child-process-promise\n=====================\n\nSimple wrapper around the `child_process` module that makes use of promises\n\n# Installation\n```\nnpm install child-process-promise --save\n```\n\n# Usage\n\n## exec\n```javascript\nvar exec = require('child-process-promise').exec;\n\nexec('echo hello')\n    .then(function (result) {\n        var stdout = result.stdout;\n        var stderr = result.stderr;\n        console.log('stdout: ', stdout);\n        console.log('stderr: ', stderr);\n    })\n    .fail(function (err) {\n        console.error('ERROR: ', err);\n    })\n    .progress(function (childProcess) {\n        console.log('childProcess.pid: ', childProcess.pid);\n    });\n```\n\n## spawn\n```javascript\nvar spawn = require('child-process-promise').spawn;\n\nspawn('echo', ['hello'])\n    .progress(function (childProcess) {\n        console.log('[spawn] childProcess.pid: ', childProcess.pid);\n        childProcess.stdout.on('data', function (data) {\n            console.log('[spawn] stdout: ', data.toString());\n        });\n        childProcess.stderr.on('data', function (data) {\n            console.log('[spawn] stderr: ', data.toString());\n        });\n    })\n    .then(function () {\n        console.log('[spawn] done!');\n    })\n    .fail(function (err) {\n        console.error('[spawn] ERROR: ', err);\n    });\n```\n### Options\n\n#### capture\nType: `Array`  \nDefault: `[]`\n\nPass an additional `capture` option to buffer the result of `stdout` and/or `stderr`\n\n```javascript\nvar spawn = require('child-process-promise').spawn;\n\nspawn('echo', ['hello'], { capture: [ 'stdout', 'stderr' ]})\n    .then(function (result) {\n        console.log('[spawn] stdout: ', result.stdout.toString());\n    })\n    .fail(function (err) {\n        console.error('[spawn] stderr: ', err.stderr);\n    });\n```\n",
  "readmeFilename": "README.md",
  "homepage": "https://github.com/patrick-steele-idem/child-process-promise#readme",
  "_id": "child-process-promise@1.0.1",
  "_shasum": "8133ed00d069165a0fc0e58ffff6c13984b185fa",
  "_resolved": "https://registry.npmjs.org/child-process-promise/-/child-process-promise-1.0.1.tgz",
  "_from": "https://registry.npmjs.org/child-process-promise/-/child-process-promise-1.0.1.tgz"
}
