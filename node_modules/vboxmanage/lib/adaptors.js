// Generated by CoffeeScript 1.6.3
(function() {
  var command, machine;

  machine = require('./machine');

  command = require('./command');

  /*
  	* Lists adaptors.
  	*
  	* @param {string} vm
  	* @param {function(?err, result)} callback
  */


  exports.list = function(vm, callback) {
    return machine.properties(vm, function(err, result) {
      var adaptors, index, key, match, oref, path, ref, val, _i, _len, _name, _ref;
      if (err) {
        return callback(err);
      }
      adaptors = {};
      for (key in result) {
        val = result[key];
        match = key.match(/^\/VirtualBox\/GuestInfo\/Net\/(\d+)\/(.+?)$/);
        if (!match) {
          continue;
        }
        index = parseInt(match[1]) + 1;
        path = match[2];
        oref = ref = adaptors[_name = "Adaptor " + index] != null ? adaptors[_name = "Adaptor " + index] : adaptors[_name] = {};
        _ref = path.split('/');
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          key = _ref[_i];
          path = key;
          oref = ref;
          ref = ref[path] != null ? ref[path] : ref[path] = {};
        }
        oref[path] = val.value;
      }
      if (callback) {
        return callback(null, adaptors);
      }
    });
  };

  /*
  	* Sets hostonly network adaptor on vm.
  	*
  	* @param {string} vm
  	* @param {number} nic
  	* @param {string} netname
  	* @param {function(?err)} callback
  */


  exports.set_hostonly = function(vm, nic, netname, callback) {
    return command.exec('modifyvm', vm, "--nic" + nic, 'hostonly', "--hostonlyadapter" + nic, netname, function(err, code, output) {
      if (err) {
        return callback(err);
      }
      if (code > 0) {
        return callback(new Error("cannot set hostonly network for nic " + nic + " on " + vm));
      }
      if (callback) {
        return callback();
      }
    });
  };

  /*
  	* Sets internal network adaptor on vm.
  	*
  	* @param {string} vm
  	* @param {number} nic
  	* @param {string} netname
  	* @param {function(?err)} callback
  */


  exports.set_internal = function(vm, nic, netname, callback) {
    return command.exec('modifyvm', vm, "--nic" + nic, 'intnet', "--intnet" + nic, netname, function(err, code, output) {
      if (err) {
        return callback(err);
      }
      if (code > 0) {
        return callback(new Error("cannot set internal network for nic " + nic + " on " + vm));
      }
      if (callback) {
        return callback();
      }
    });
  };

  /*
  	* Sets nat network adaptor on vm.
  	*
  	* @param {string} vm
  	* @param {number} nic
  	* @param {function(?err)} callback
  */


  exports.set_nat = function(vm, nic, callback) {
    return command.exec('modifyvm', vm, "--nic" + nic, 'nat', function(err, code, output) {
      if (err) {
        return callback(err);
      }
      if (code > 0) {
        return callback(new Error("cannot set nat network for nic " + nic + " on " + vm));
      }
      if (callback) {
        return callback();
      }
    });
  };

}).call(this);
